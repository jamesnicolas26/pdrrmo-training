(()=>{var e={37:e=>{"use strict";e.exports=require("mongoose")},52:(e,s,t)=>{const r=t(829),n=t(171),o=(...e)=>async(s,t,r)=>{try{if(!s.user||!s.user.id)return t.status(401).json({message:"Unauthorized access. User not authenticated."});const o=await n.findById(s.user.id);if(!o)return t.status(404).json({message:"User not found."});if(!e.includes(o.role))return t.status(403).json({message:"Access denied."});r()}catch(e){console.error("Authorization error:",e.message),t.status(500).json({message:"Error verifying user role."})}},a=o("Admin","superadmin");e.exports={authenticate:(e,s,t)=>{const n=e.headers.authorization;if(!n||!n.startsWith("Bearer "))return s.status(401).json({message:"Access denied. No token provided."});const o=n.split(" ")[1];try{const s=r.verify(o,process.env.SECRET_KEY);e.user=s,t()}catch(e){console.error("JWT Error:",e.message),s.status(403).json({message:"Authentication failed. Invalid or expired token."})}},authorizeRoles:o,authorizeAdmin:a,protect:async(e,s,t)=>{try{if(!e.user||!e.user.id)return s.status(401).json({message:"Unauthorized access. User not authenticated."});const r=await n.findById(e.user.id);if(!r)return s.status(404).json({message:"User not found."});e.user=r,t()}catch(e){console.error("Protection error:",e.message),s.status(500).json({message:"Error verifying user."})}}}},128:(e,s,t)=>{t(818).config();const r=t(252),n=t(577),o=t(525),a=t(763),i=t(928),c=t(896),d=t(278),u=t(824),l=t(865),m=t(741),f=t(226),{authenticate:g,authorizeAdmin:p}=t(52),h=r(),y=process.env.PORT||3e3;(async()=>{try{await d(),console.log("✅ MongoDB connected")}catch(e){console.error("❌ MongoDB connection failed:",e.message),process.exit(1)}})(),h.use(o()),h.use(r.json({limit:"50mb"})),h.use(r.urlencoded({limit:"50mb",extended:!0}));const j=a({windowMs:9e5,max:100,standardHeaders:!0,legacyHeaders:!1});h.use(j);const v=["https://bulacan.gov.ph","https://pdrrmo.bulacan.gov.ph","https://pdrrmo.bulacan.gov.ph/pdrrmo-training","https://pdrrmo.bulacan.gov.ph/wp-content/reactpress/apps/pdrrmo-training"],w={origin:(e,s)=>{!e||v.includes(e)?(console.log("✅ CORS allowed for:",e||"Direct server call"),s(null,!0)):(console.error("❌ CORS not allowed for:",e),s(new Error("CORS not allowed")))},methods:["GET","POST","PUT","DELETE","OPTIONS"],allowedHeaders:["Content-Type","Authorization"],credentials:!0,optionsSuccessStatus:200};h.use(n(w)),h.options("*",n(w)),h.use("/offices",f),console.log("✅ Registered route: /offices"),h.use("/",u),console.log("✅ Registered route: /auth"),h.use("/users",g,p,l),console.log("✅ Registered route: /users"),h.use("/training-titles",m),console.log("✅ Registered route: /training-titles"),h.get("/status",(e,s)=>{s.json({status:"ok",message:"API is running",time:(new Date).toISOString(),env:"production"})}),h.post("/echo",(e,s)=>{const{message:t}=e.body;if(console.log("✅ Echo endpoint hit with message:",t),!t)return console.error("❌ Echo endpoint: Missing 'message' in request body"),s.status(400).json({error:"Message is required"});s.json({echo:t})}),h.get("/",(e,s)=>{s.send(`\n    <!DOCTYPE html>\n    <html lang="en">\n      <head>\n        <meta charset="UTF-8" />\n        <title>PDRRMO API</title>\n        <style>\n          body { font-family: Arial, sans-serif; background: #f4f4f4; padding: 2rem; line-height: 1.6; }\n          h1 { color: #2c3e50; }\n          ul { padding-left: 1rem; }\n        </style>\n      </head>\n      <body>\n        <h1>✅ Welcome to the PDRRMO API</h1>\n        <p>This API provides access to training, office, and user management endpoints.</p>\n        <p><strong>Available routes:</strong></p>\n        <ul>\n          <li><a href="/status">/status</a></li>\n          <li><a href="/echo">/echo</a> (POST only)</li>\n          <li><a href="/auth">/auth</a></li>\n          <li><a href="/users">/users</a></li>\n          <li><a href="/offices">/offices</a></li>\n          <li><a href="/training-titles">/training-titles</a></li>\n        </ul>\n        <p><em>Time: ${(new Date).toLocaleString()}</em></p>\n      </body>\n    </html>\n  `)}),h.use((e,s,t,r)=>{console.error("❌ Unhandled error:",e.stack||e.message),t.status(500).json({message:"Internal Server Error",error:e.message})});const E=i.join(__dirname,"../build");c.existsSync(E)&&(h.use(r.static(E)),h.get("*",(e,s)=>{s.sendFile(i.join(E,"index.html"))})),h.listen(y,()=>{console.log(`✅ Server running on port ${y} - ${(new Date).toLocaleString()}`)}),process.on("unhandledRejection",e=>{console.error("❌ Unhandled Promise Rejection:",e)}),process.on("uncaughtException",e=>{console.error("❌ Uncaught Exception:",e),process.exit(1)}),e.exports=h},171:(e,s,t)=>{const r=t(37),n=new r.Schema({title:{type:String,required:!0},lastname:{type:String,required:!0},firstname:{type:String,required:!0},middlename:{type:String,default:""},office:{type:String,default:""},username:{type:String,required:!0,unique:!0},role:{type:String,enum:["Member","Admin","superadmin"],required:!0},password:{type:String,required:!0},isApproved:{type:Boolean,default:!1}});e.exports=r.model("user",n)},226:(e,s,t)=>{const r=t(252).Router(),{authenticate:n,authorizeRoles:o}=t(52),a=t(488);r.get("/",async(e,s)=>{try{const e=await a.find();s.status(200).json({offices:e})}catch(e){console.error("Error fetching offices:",e.message),s.status(500).json({message:"Failed to fetch offices."})}}),r.post("/",n,o("superadmin"),async(e,s)=>{const{name:t}=e.body;if(!t)return s.status(400).json({message:"Office name is required."});try{if(await a.findOne({name:t}))return s.status(400).json({message:"Office already exists."});const e=new a({name:t});await e.save(),s.status(201).json({message:"Office added successfully.",office:e})}catch(e){console.error("Error adding office:",e.message),s.status(500).json({message:"Failed to add office."})}}),e.exports=r},246:(e,s,t)=>{const r=t(37),n=new r.Schema({name:{type:String,required:!0,unique:!0,trim:!0}},{timestamps:!0});e.exports=r.model("TrainingTitle",n)},252:e=>{"use strict";e.exports=require("express")},278:(e,s,t)=>{const r=t(37);e.exports=async()=>{try{const e=await r.connect(process.env.MONGO_URI);console.log(`✅ MongoDB connected: ${e.connection.host}`)}catch(e){console.error("❌ MongoDB connection error:",e.message),process.exit(1)}}},488:(e,s,t)=>{const r=t(37),n=new r.Schema({name:{type:String,required:!0,unique:!0,trim:!0}});e.exports=r.model("Office",n)},525:e=>{"use strict";e.exports=require("helmet")},530:(e,s,t)=>{const r=t(171),n=t(37);e.exports={getAllUsers:async(e,s)=>{try{const e=await r.find({},"-password");s.json(e)}catch(e){console.error("Error fetching users:",e.message),s.status(500).json({message:"Error fetching users."})}},approveUser:async(e,s)=>{try{const t=e.params.id,n=await r.findById(t);if(!n)return s.status(404).json({message:"User not found"});n.isApproved=!0,await n.save(),s.status(200).json({message:"User approved successfully",user:n})}catch(e){console.error("Approve User Error:",e.message),s.status(500).json({message:"Server error"})}},deleteUser:async(e,s)=>{try{const t=e.params.id;if(!await r.findByIdAndDelete(t))return s.status(404).json({message:"User not found"});s.status(200).json({message:"User deleted successfully"})}catch(e){console.error("Delete User Error:",e.message),s.status(500).json({message:"Server error"})}},getUserById:async(e,s)=>{try{const t=e.params.id;if(!n.Types.ObjectId.isValid(t))return s.status(400).json({message:"Invalid user ID format."});const o=await r.findById(t,"-password");if(!o)return s.status(404).json({message:"User not found"});s.status(200).json(o)}catch(e){console.error("Error fetching user:",e.message),s.status(500).json({message:"Error fetching user."})}},updateUserById:async(e,s)=>{try{const{id:t}=e.params,{title:n,lastname:o,firstname:a,middlename:i,office:c,username:d,role:u}=e.body,l=await r.findByIdAndUpdate(t,{title:n,lastname:o,firstname:a,middlename:i,office:c,username:d,role:u},{new:!0,runValidators:!0});if(!l)return s.status(404).json({message:"User not found."});s.status(200).json(l)}catch(e){console.error("Error updating user:",e.message),s.status(500).json({message:"Server error."})}}}},577:e=>{"use strict";e.exports=require("cors")},729:e=>{"use strict";e.exports=require("bcryptjs")},741:(e,s,t)=>{const r=t(252).Router(),{authenticate:n,authorizeRoles:o}=t(52),a=t(246);r.get("/",async(e,s)=>{try{const e=await a.find({});s.status(200).json(e)}catch(e){s.status(500).json({message:"Error fetching training titles"})}}),r.post("/",n,o("superadmin"),async(e,s)=>{const{name:t}=e.body;if(!t||"string"!=typeof t)return s.status(400).json({message:"Invalid title"});try{if(await a.findOne({name:t}))return s.status(400).json({message:"Title already exists"});const e=new a({name:t});await e.save(),s.status(201).json(e)}catch(e){s.status(500).json({message:"Error adding training title"})}}),e.exports=r},763:e=>{"use strict";e.exports=require("express-rate-limit")},818:e=>{"use strict";e.exports=require("dotenv")},824:(e,s,t)=>{const r=t(252),{loginUser:n,registerUser:o}=t(879),a=t(829),i=t(171),c=r.Router();c.get("/",(e,s)=>{s.send("✅ PDRRMO Auth API is online")}),c.post("/login",n),c.post("/register",o),c.post("/refresh-token",async(e,s)=>{const t=e.headers.authorization?.split(" ")[1];if(!t)return s.status(401).json({message:"No token provided."});try{console.log("Received token:",t);const e=a.verify(t,process.env.SECRET_KEY);console.log("Decoded token:",e);const r=await i.findById(e.id);if(!r)return s.status(404).json({message:"User not found."});const n=a.sign({id:r._id,role:r.role,firstname:r.firstname,lastname:r.lastname,office:r.office},process.env.SECRET_KEY,{expiresIn:"1h"});s.json({id:r._id,firstname:r.firstname,lastname:r.lastname,role:r.role,office:r.office,token:n})}catch(e){console.error("Error refreshing token:",e.message),s.status(401).json({message:"Invalid or expired token."})}}),e.exports=c},829:e=>{"use strict";e.exports=require("jsonwebtoken")},865:(e,s,t)=>{const r=t(252),{getAllUsers:n,approveUser:o,deleteUser:a,getUserById:i,updateUserById:c}=t(530),{authenticate:d,authorizeAdmin:u,protect:l}=t(52),m=r.Router();m.get("/",d,u,n),m.put("/approve/:id",d,u,o),m.put("/:id",d,u,c),m.get("/:id",d,u,i),m.delete("/:id",d,u,a),e.exports=m},879:(e,s,t)=>{const r=t(729),n=t(829),o=t(171),a=(e,s,t,r,o)=>{const a=process.env.SECRET_KEY||"aad96d99fd8ed30865caec96d6c1adfda41949948da88af3b448ce232ce36597";return n.sign({id:e,role:s,firstname:t,lastname:r,office:o},a,{expiresIn:"1h"})};e.exports={loginUser:async(e,s)=>{const{username:t,password:n}=e.body;if(!t||!n)return s.status(400).json({message:"Username and password are required."});try{const e=await o.findOne({username:t});if(!e)return s.status(404).json({message:"User not found."});if(!await r.compare(n,e.password))return s.status(401).json({message:"Invalid credentials."});const i=a(e._id,e.role,e.firstname,e.lastname,e.office);s.json({id:e._id,firstname:e.firstname,lastname:e.lastname,office:e.office,token:i,isApproved:e.isApproved,role:e.role})}catch(e){console.error("Error logging in:",e),s.status(500).json({message:"Error logging in."})}},registerUser:async(e,s)=>{const{title:t,lastname:n,firstname:a,middlename:i,office:c,username:d,role:u,password:l}=e.body;if(!(t&&n&&a&&d&&u&&l))return s.status(400).json({message:"All required fields must be filled."});try{if(await o.findOne({username:d}))return s.status(409).json({message:"Username already exists."});const e=await r.hash(l,10),m=new o({title:t,lastname:n,firstname:a,middlename:i,office:c,username:d,role:u,password:e,isApproved:"Admin"===u});await m.save(),s.status(201).json({message:"User registered successfully."})}catch(e){console.error("Error registering user:",e),s.status(500).json({message:"Error registering user."})}},refreshToken:async(e,s)=>{const t=e.headers.authorization?.split(" ")[1];if(!t)return s.status(400).json({message:"Token required."});try{const e=n.verify(t,process.env.SECRET_KEY||"aad96d99fd8ed30865caec96d6c1adfda41949948da88af3b448ce232ce36597"),r=await o.findById(e.id);if(!r)return s.status(404).json({message:"User not found."});const i=a(r._id,r.role);s.json({id:r._id,firstname:r.firstname,lastname:r.lastname,office:r.office,token:i})}catch(e){console.error("Error refreshing token:",e.message),s.status(403).json({message:"Invalid or expired token."})}}}},896:e=>{"use strict";e.exports=require("fs")},928:e=>{"use strict";e.exports=require("path")}},s={};!function t(r){var n=s[r];if(void 0!==n)return n.exports;var o=s[r]={exports:{}};return e[r](o,o.exports,t),o.exports}(128)})();